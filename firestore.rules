rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Función para verificar si el usuario es el propietario del documento
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // Función para verificar si el usuario es un participante de un documento (transacción, conversación)
    function isParticipant() {
      return request.auth != null && request.auth.uid in resource.data.participantIds;
    }

    // Los perfiles de usuario pueden ser leídos por cualquiera, pero solo escritos por el propietario.
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if isOwner(userId);
    }
    
    // Las publicaciones son públicas, pero solo el propietario puede crearlas, actualizarlas o borrarlas.
    match /publications/{publicationId} {
      allow read: if true;
      allow create, update, delete: if request.auth != null && request.auth.uid == request.resource.data.providerId;
    }

    // Las transacciones solo pueden ser leídas/escritas por los participantes.
    match /transactions/{transactionId} {
        allow read, write: if isParticipant();
    }
    
    // Las conversaciones solo pueden ser leídas/escritas por los participantes.
    match /conversations/{conversationId} {
        allow read, write: if isParticipant();
    }
    
    // Cualquiera puede crear una notificación (el backend lo hace), pero solo el usuario destinatario puede leerla/actualizarla.
    match /notifications/{notificationId} {
        allow read, update: if isOwner(resource.data.userId);
        allow create: if request.auth != null;
    }

    // Cualquiera puede crear un reporte, pero solo los admins pueden leerlos.
    match /reports/{reportId} {
        allow create: if request.auth != null;
        allow read, update, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Las sesiones de QR son privadas entre los participantes.
    match /qr_sessions/{sessionId} {
       allow read, write: if isParticipant();
    }
    
    // Las afiliaciones pueden ser leídas por los involucrados.
    match /affiliations/{affiliationId} {
        allow read: if request.auth != null && (request.auth.uid == resource.data.providerId || request.auth.uid == resource.data.companyId);
        allow create, update: if request.auth != null;
    }

    // Denegar todo lo demás por defecto
    match /{document=**} {
      allow read, write: if false;
    }
  }
}