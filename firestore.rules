
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isParticipant(resource) {
        return request.auth.uid in resource.data.participantIds;
    }

    // Users: Can only read/write their own data. All can create their own doc.
    match /users/{userId} {
      allow read; // Allow reading public profiles
      allow create: if isAuthenticated() && isOwner(userId);
      allow update, delete: if isAuthenticated() && isOwner(userId);
    }
    
    // Publications: Publicly readable, only owner can write/delete.
    match /publications/{pubId} {
      allow read;
      allow create, update, delete: if isAuthenticated() && isOwner(resource.data.providerId);
    }

    // Transactions: Only participants can read/write.
    match /transactions/{txId} {
      allow read, write: if isAuthenticated() && isParticipant(resource);
    }
    
    // Conversations: Only participants can read/write.
    match /conversations/{convoId} {
        allow read, write: if isAuthenticated() && isParticipant(resource);
    }

    // Affiliations: Only authenticated users can create, participants can read.
    match /affiliations/{affilId} {
        allow read: if isAuthenticated() && isParticipant(resource);
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated() && request.auth.uid == resource.data.companyId;
    }

    // Reports: Only authenticated users can create. Admins (server-side) will manage them.
    match /reports/{reportId} {
        allow create: if isAuthenticated();
        allow read, write, delete: if false; // Managed by server-side admin logic
    }
    
    // Notifications: Only owner can read/write.
     match /notifications/{notifId} {
      allow read, write, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
    
    // Campaigns: Owner can create, only readable by owner.
    match /campaigns/{campaignId} {
        allow read, update: if isAuthenticated() && isOwner(resource.data.providerId);
        allow create: if isAuthenticated();
        allow delete: if false; // Campaigns should be cancelled, not deleted
    }

    // QR Sessions: Only participants can read/write.
    match /qr_sessions/{sessionId} {
      allow read, write: if isAuthenticated() && isParticipant(resource);
    }

    // Live Streams: Publicly readable, only creator can manage.
    match /livestreams/{streamId} {
        allow read;
        allow create, update, delete: if isAuthenticated() && isOwner(resource.data.creatorId);
    }
  }
}
