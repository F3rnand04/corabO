rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users can only read and write their own document.
    // Public profiles are handled by a secure backend flow.
    match /users/{userId} {
      allow read, update, delete: if request.auth.uid == userId;
      allow create: if request.auth.uid != null;
    }

    // Allow public read for publications, but only the owner can write/delete.
    match /publications/{publicationId} {
      allow read: if true;
      allow create, update, delete: if request.auth.uid == request.resource.data.providerId;
    }

    // Only participants can read/write to a conversation.
    match /conversations/{conversationId} {
      allow read, update, create: if request.auth.uid in resource.data.participantIds;
    }

    // Users can only manage transactions they are a part of.
    match /transactions/{transactionId} {
      allow read, create, update: if request.auth.uid in resource.data.participantIds;
    }
    
    // Only authenticated users can create reports. Admins manage them via backend.
    match /reports/{reportId} {
        allow create: if request.auth.uid != null;
        allow read, update, delete: if false; // Managed by backend
    }
    
    // Notifications are private to each user.
    match /notifications/{notificationId} {
        allow read, update, delete: if request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid != null; // Created by backend flows
    }

    // Affiliations are managed by backend flows.
    match /affiliations/{affiliationId} {
        allow read: if request.auth.uid in [resource.data.providerId, resource.data.companyId];
        allow create, update, delete: if false; // Managed by backend
    }
    
    // Campaigns are managed by backend flows.
    match /campaigns/{campaignId} {
        allow read: if true; // Public read might be needed for some analytics
        allow create, update, delete: if false; // Managed by backend
    }
    
    // QR sessions can be read by participants, but only updated by backend flows.
    match /qr_sessions/{sessionId} {
        allow read: if request.auth.uid in resource.data.participantIds;
        allow create, update, delete: if false; // Managed by backend
    }

    // Disputes are managed by backend flows and admins.
    match /disputes/{disputeId} {
        allow read: if request.auth.uid in [resource.data.clientId, resource.data.providerId];
        allow create, update, delete: if false; // Managed by backend
    }
  }
}