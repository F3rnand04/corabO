
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // --- Users Collection ---
    // Users can read/write their own data.
    // No one can read or write other users' data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow reading a user's public gallery
      match /gallery/{imageId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // --- Public Publications Collection ---
    // Anyone can read public publications.
    // Users can only create publications where they are the owner.
    match /publications/{publicationId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.providerId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.providerId == request.auth.uid;
    }
    
    // --- Products Collection ---
    // Anyone can read products.
    // Only the provider can create/update/delete their own products.
    match /products/{productId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.providerId == request.auth.uid;
      allow update, delete: if request.auth != null && resource.data.providerId == request.auth.uid;
    }

    // --- Transactions & Conversations ---
    // Only participants of the transaction/conversation can access it.
    match /{collection}/{docId} {
      allow read, write: if request.auth != null && resource.data.participantIds.hasAny([request.auth.uid]);
    }
  }
}
