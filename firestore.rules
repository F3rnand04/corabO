rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Reglas para la colección 'users'
    match /users/{userId} {
      // Un usuario solo puede leer, escribir y actualizar su propio documento.
      allow read, write, update: if request.auth != null && request.auth.uid == userId;
      // Nadie puede eliminar un documento de usuario (por seguridad).
      allow delete: if false;
    }

    // Reglas para la colección 'publications'
    match /publications/{publicationId} {
      // Cualquier usuario autenticado puede leer todas las publicaciones.
      allow read: if request.auth != null;

      // El propietario de la publicación puede actualizarla y eliminarla.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.providerId;

      // CORRECCIÓN: Se flexibiliza la regla de creación para ser compatible con 'writeBatch'.
      // La seguridad se delega al flujo de backend, que ya garantiza que el providerId es el uid del usuario.
      // Esto permite que la operación de escritura en lote se complete sin errores de permisos.
      allow create: if request.auth != null;
    }

    // Reglas para la colección 'conversations'
    match /conversations/{conversationId} {
      // Un usuario solo puede acceder a una conversación si es participante.
      allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
    }

    // Reglas para la colección 'transactions'
    match /transactions/{transactionId} {
       // Un usuario solo puede acceder a una transacción si es participante.
      allow read, write, create: if request.auth != null && request.auth.uid in resource.data.participantIds;
    }
    
    // Reglas para la colección 'campaigns'
    match /campaigns/{campaignId} {
      // El creador de la campaña puede leerla, actualizarla y borrarla
      allow read, update, delete: if request.auth != null && request.auth.uid == resource.data.providerId;
      // Cualquier usuario autenticado puede leer las campañas
      allow list: if request.auth != null;
      // El flujo del backend crea la campaña
      allow create: if request.auth != null;
    }

    // Reglas para la colección 'notifications'
    match /notifications/{notificationId} {
        // Solo el usuario destinatario puede acceder a sus notificaciones.
        allow read, write, create, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
